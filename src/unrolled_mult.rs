pub(crate) fn long_mult(A: &Vec<Vec<f32>>, B: &Vec<Vec<f32>>) -> Vec<Vec<f32>> {
    let n = A.len();

    match n {
        8 => matmul8(n, A, B),
        16 => matmul16(n, A, B),
        32 => matmul32(n, A, B),
        64 => matmul64(n, A, B),
        128 => matmul128(n, A, B),
        256 => matmul256(n, A, B),
        512 => matmul512(n, A, B),
        _ => unimplemented!(),
    }
}

fn matmul512(n: usize, A: &Vec<Vec<f32>>, B: &Vec<Vec<f32>>) -> Vec<Vec<f32>> {
    let mut C = vec![vec![0.0; n]; n];
    for i in 0..n {
        for j in 0..n {
            C[i][j] = (A[i][0] * B[0][j])
                + (A[i][1] * B[1][j])
                + (A[i][2] * B[2][j])
                + (A[i][3] * B[3][j])
                + (A[i][4] * B[4][j])
                + (A[i][5] * B[5][j])
                + (A[i][6] * B[6][j])
                + (A[i][7] * B[7][j])
                + (A[i][8] * B[8][j])
                + (A[i][9] * B[9][j])
                + (A[i][10] * B[10][j])
                + (A[i][11] * B[11][j])
                + (A[i][12] * B[12][j])
                + (A[i][13] * B[13][j])
                + (A[i][14] * B[14][j])
                + (A[i][15] * B[15][j])
                + (A[i][16] * B[16][j])
                + (A[i][17] * B[17][j])
                + (A[i][18] * B[18][j])
                + (A[i][19] * B[19][j])
                + (A[i][20] * B[20][j])
                + (A[i][21] * B[21][j])
                + (A[i][22] * B[22][j])
                + (A[i][23] * B[23][j])
                + (A[i][24] * B[24][j])
                + (A[i][25] * B[25][j])
                + (A[i][26] * B[26][j])
                + (A[i][27] * B[27][j])
                + (A[i][28] * B[28][j])
                + (A[i][29] * B[29][j])
                + (A[i][30] * B[30][j])
                + (A[i][31] * B[31][j])
                + (A[i][32] * B[32][j])
                + (A[i][33] * B[33][j])
                + (A[i][34] * B[34][j])
                + (A[i][35] * B[35][j])
                + (A[i][36] * B[36][j])
                + (A[i][37] * B[37][j])
                + (A[i][38] * B[38][j])
                + (A[i][39] * B[39][j])
                + (A[i][40] * B[40][j])
                + (A[i][41] * B[41][j])
                + (A[i][42] * B[42][j])
                + (A[i][43] * B[43][j])
                + (A[i][44] * B[44][j])
                + (A[i][45] * B[45][j])
                + (A[i][46] * B[46][j])
                + (A[i][47] * B[47][j])
                + (A[i][48] * B[48][j])
                + (A[i][49] * B[49][j])
                + (A[i][50] * B[50][j])
                + (A[i][51] * B[51][j])
                + (A[i][52] * B[52][j])
                + (A[i][53] * B[53][j])
                + (A[i][54] * B[54][j])
                + (A[i][55] * B[55][j])
                + (A[i][56] * B[56][j])
                + (A[i][57] * B[57][j])
                + (A[i][58] * B[58][j])
                + (A[i][59] * B[59][j])
                + (A[i][60] * B[60][j])
                + (A[i][61] * B[61][j])
                + (A[i][62] * B[62][j])
                + (A[i][63] * B[63][j])
                + (A[i][64] * B[64][j])
                + (A[i][65] * B[65][j])
                + (A[i][66] * B[66][j])
                + (A[i][67] * B[67][j])
                + (A[i][68] * B[68][j])
                + (A[i][69] * B[69][j])
                + (A[i][70] * B[70][j])
                + (A[i][71] * B[71][j])
                + (A[i][72] * B[72][j])
                + (A[i][73] * B[73][j])
                + (A[i][74] * B[74][j])
                + (A[i][75] * B[75][j])
                + (A[i][76] * B[76][j])
                + (A[i][77] * B[77][j])
                + (A[i][78] * B[78][j])
                + (A[i][79] * B[79][j])
                + (A[i][80] * B[80][j])
                + (A[i][81] * B[81][j])
                + (A[i][82] * B[82][j])
                + (A[i][83] * B[83][j])
                + (A[i][84] * B[84][j])
                + (A[i][85] * B[85][j])
                + (A[i][86] * B[86][j])
                + (A[i][87] * B[87][j])
                + (A[i][88] * B[88][j])
                + (A[i][89] * B[89][j])
                + (A[i][90] * B[90][j])
                + (A[i][91] * B[91][j])
                + (A[i][92] * B[92][j])
                + (A[i][93] * B[93][j])
                + (A[i][94] * B[94][j])
                + (A[i][95] * B[95][j])
                + (A[i][96] * B[96][j])
                + (A[i][97] * B[97][j])
                + (A[i][98] * B[98][j])
                + (A[i][99] * B[99][j])
                + (A[i][100] * B[100][j])
                + (A[i][101] * B[101][j])
                + (A[i][102] * B[102][j])
                + (A[i][103] * B[103][j])
                + (A[i][104] * B[104][j])
                + (A[i][105] * B[105][j])
                + (A[i][106] * B[106][j])
                + (A[i][107] * B[107][j])
                + (A[i][108] * B[108][j])
                + (A[i][109] * B[109][j])
                + (A[i][110] * B[110][j])
                + (A[i][111] * B[111][j])
                + (A[i][112] * B[112][j])
                + (A[i][113] * B[113][j])
                + (A[i][114] * B[114][j])
                + (A[i][115] * B[115][j])
                + (A[i][116] * B[116][j])
                + (A[i][117] * B[117][j])
                + (A[i][118] * B[118][j])
                + (A[i][119] * B[119][j])
                + (A[i][120] * B[120][j])
                + (A[i][121] * B[121][j])
                + (A[i][122] * B[122][j])
                + (A[i][123] * B[123][j])
                + (A[i][124] * B[124][j])
                + (A[i][125] * B[125][j])
                + (A[i][126] * B[126][j])
                + (A[i][127] * B[127][j])
                + (A[i][128] * B[128][j])
                + (A[i][129] * B[129][j])
                + (A[i][130] * B[130][j])
                + (A[i][131] * B[131][j])
                + (A[i][132] * B[132][j])
                + (A[i][133] * B[133][j])
                + (A[i][134] * B[134][j])
                + (A[i][135] * B[135][j])
                + (A[i][136] * B[136][j])
                + (A[i][137] * B[137][j])
                + (A[i][138] * B[138][j])
                + (A[i][139] * B[139][j])
                + (A[i][140] * B[140][j])
                + (A[i][141] * B[141][j])
                + (A[i][142] * B[142][j])
                + (A[i][143] * B[143][j])
                + (A[i][144] * B[144][j])
                + (A[i][145] * B[145][j])
                + (A[i][146] * B[146][j])
                + (A[i][147] * B[147][j])
                + (A[i][148] * B[148][j])
                + (A[i][149] * B[149][j])
                + (A[i][150] * B[150][j])
                + (A[i][151] * B[151][j])
                + (A[i][152] * B[152][j])
                + (A[i][153] * B[153][j])
                + (A[i][154] * B[154][j])
                + (A[i][155] * B[155][j])
                + (A[i][156] * B[156][j])
                + (A[i][157] * B[157][j])
                + (A[i][158] * B[158][j])
                + (A[i][159] * B[159][j])
                + (A[i][160] * B[160][j])
                + (A[i][161] * B[161][j])
                + (A[i][162] * B[162][j])
                + (A[i][163] * B[163][j])
                + (A[i][164] * B[164][j])
                + (A[i][165] * B[165][j])
                + (A[i][166] * B[166][j])
                + (A[i][167] * B[167][j])
                + (A[i][168] * B[168][j])
                + (A[i][169] * B[169][j])
                + (A[i][170] * B[170][j])
                + (A[i][171] * B[171][j])
                + (A[i][172] * B[172][j])
                + (A[i][173] * B[173][j])
                + (A[i][174] * B[174][j])
                + (A[i][175] * B[175][j])
                + (A[i][176] * B[176][j])
                + (A[i][177] * B[177][j])
                + (A[i][178] * B[178][j])
                + (A[i][179] * B[179][j])
                + (A[i][180] * B[180][j])
                + (A[i][181] * B[181][j])
                + (A[i][182] * B[182][j])
                + (A[i][183] * B[183][j])
                + (A[i][184] * B[184][j])
                + (A[i][185] * B[185][j])
                + (A[i][186] * B[186][j])
                + (A[i][187] * B[187][j])
                + (A[i][188] * B[188][j])
                + (A[i][189] * B[189][j])
                + (A[i][190] * B[190][j])
                + (A[i][191] * B[191][j])
                + (A[i][192] * B[192][j])
                + (A[i][193] * B[193][j])
                + (A[i][194] * B[194][j])
                + (A[i][195] * B[195][j])
                + (A[i][196] * B[196][j])
                + (A[i][197] * B[197][j])
                + (A[i][198] * B[198][j])
                + (A[i][199] * B[199][j])
                + (A[i][200] * B[200][j])
                + (A[i][201] * B[201][j])
                + (A[i][202] * B[202][j])
                + (A[i][203] * B[203][j])
                + (A[i][204] * B[204][j])
                + (A[i][205] * B[205][j])
                + (A[i][206] * B[206][j])
                + (A[i][207] * B[207][j])
                + (A[i][208] * B[208][j])
                + (A[i][209] * B[209][j])
                + (A[i][210] * B[210][j])
                + (A[i][211] * B[211][j])
                + (A[i][212] * B[212][j])
                + (A[i][213] * B[213][j])
                + (A[i][214] * B[214][j])
                + (A[i][215] * B[215][j])
                + (A[i][216] * B[216][j])
                + (A[i][217] * B[217][j])
                + (A[i][218] * B[218][j])
                + (A[i][219] * B[219][j])
                + (A[i][220] * B[220][j])
                + (A[i][221] * B[221][j])
                + (A[i][222] * B[222][j])
                + (A[i][223] * B[223][j])
                + (A[i][224] * B[224][j])
                + (A[i][225] * B[225][j])
                + (A[i][226] * B[226][j])
                + (A[i][227] * B[227][j])
                + (A[i][228] * B[228][j])
                + (A[i][229] * B[229][j])
                + (A[i][230] * B[230][j])
                + (A[i][231] * B[231][j])
                + (A[i][232] * B[232][j])
                + (A[i][233] * B[233][j])
                + (A[i][234] * B[234][j])
                + (A[i][235] * B[235][j])
                + (A[i][236] * B[236][j])
                + (A[i][237] * B[237][j])
                + (A[i][238] * B[238][j])
                + (A[i][239] * B[239][j])
                + (A[i][240] * B[240][j])
                + (A[i][241] * B[241][j])
                + (A[i][242] * B[242][j])
                + (A[i][243] * B[243][j])
                + (A[i][244] * B[244][j])
                + (A[i][245] * B[245][j])
                + (A[i][246] * B[246][j])
                + (A[i][247] * B[247][j])
                + (A[i][248] * B[248][j])
                + (A[i][249] * B[249][j])
                + (A[i][250] * B[250][j])
                + (A[i][251] * B[251][j])
                + (A[i][252] * B[252][j])
                + (A[i][253] * B[253][j])
                + (A[i][254] * B[254][j])
                + (A[i][255] * B[255][j])
                + (A[i][256] * B[256][j])
                + (A[i][257] * B[257][j])
                + (A[i][258] * B[258][j])
                + (A[i][259] * B[259][j])
                + (A[i][260] * B[260][j])
                + (A[i][261] * B[261][j])
                + (A[i][262] * B[262][j])
                + (A[i][263] * B[263][j])
                + (A[i][264] * B[264][j])
                + (A[i][265] * B[265][j])
                + (A[i][266] * B[266][j])
                + (A[i][267] * B[267][j])
                + (A[i][268] * B[268][j])
                + (A[i][269] * B[269][j])
                + (A[i][270] * B[270][j])
                + (A[i][271] * B[271][j])
                + (A[i][272] * B[272][j])
                + (A[i][273] * B[273][j])
                + (A[i][274] * B[274][j])
                + (A[i][275] * B[275][j])
                + (A[i][276] * B[276][j])
                + (A[i][277] * B[277][j])
                + (A[i][278] * B[278][j])
                + (A[i][279] * B[279][j])
                + (A[i][280] * B[280][j])
                + (A[i][281] * B[281][j])
                + (A[i][282] * B[282][j])
                + (A[i][283] * B[283][j])
                + (A[i][284] * B[284][j])
                + (A[i][285] * B[285][j])
                + (A[i][286] * B[286][j])
                + (A[i][287] * B[287][j])
                + (A[i][288] * B[288][j])
                + (A[i][289] * B[289][j])
                + (A[i][290] * B[290][j])
                + (A[i][291] * B[291][j])
                + (A[i][292] * B[292][j])
                + (A[i][293] * B[293][j])
                + (A[i][294] * B[294][j])
                + (A[i][295] * B[295][j])
                + (A[i][296] * B[296][j])
                + (A[i][297] * B[297][j])
                + (A[i][298] * B[298][j])
                + (A[i][299] * B[299][j])
                + (A[i][300] * B[300][j])
                + (A[i][301] * B[301][j])
                + (A[i][302] * B[302][j])
                + (A[i][303] * B[303][j])
                + (A[i][304] * B[304][j])
                + (A[i][305] * B[305][j])
                + (A[i][306] * B[306][j])
                + (A[i][307] * B[307][j])
                + (A[i][308] * B[308][j])
                + (A[i][309] * B[309][j])
                + (A[i][310] * B[310][j])
                + (A[i][311] * B[311][j])
                + (A[i][312] * B[312][j])
                + (A[i][313] * B[313][j])
                + (A[i][314] * B[314][j])
                + (A[i][315] * B[315][j])
                + (A[i][316] * B[316][j])
                + (A[i][317] * B[317][j])
                + (A[i][318] * B[318][j])
                + (A[i][319] * B[319][j])
                + (A[i][320] * B[320][j])
                + (A[i][321] * B[321][j])
                + (A[i][322] * B[322][j])
                + (A[i][323] * B[323][j])
                + (A[i][324] * B[324][j])
                + (A[i][325] * B[325][j])
                + (A[i][326] * B[326][j])
                + (A[i][327] * B[327][j])
                + (A[i][328] * B[328][j])
                + (A[i][329] * B[329][j])
                + (A[i][330] * B[330][j])
                + (A[i][331] * B[331][j])
                + (A[i][332] * B[332][j])
                + (A[i][333] * B[333][j])
                + (A[i][334] * B[334][j])
                + (A[i][335] * B[335][j])
                + (A[i][336] * B[336][j])
                + (A[i][337] * B[337][j])
                + (A[i][338] * B[338][j])
                + (A[i][339] * B[339][j])
                + (A[i][340] * B[340][j])
                + (A[i][341] * B[341][j])
                + (A[i][342] * B[342][j])
                + (A[i][343] * B[343][j])
                + (A[i][344] * B[344][j])
                + (A[i][345] * B[345][j])
                + (A[i][346] * B[346][j])
                + (A[i][347] * B[347][j])
                + (A[i][348] * B[348][j])
                + (A[i][349] * B[349][j])
                + (A[i][350] * B[350][j])
                + (A[i][351] * B[351][j])
                + (A[i][352] * B[352][j])
                + (A[i][353] * B[353][j])
                + (A[i][354] * B[354][j])
                + (A[i][355] * B[355][j])
                + (A[i][356] * B[356][j])
                + (A[i][357] * B[357][j])
                + (A[i][358] * B[358][j])
                + (A[i][359] * B[359][j])
                + (A[i][360] * B[360][j])
                + (A[i][361] * B[361][j])
                + (A[i][362] * B[362][j])
                + (A[i][363] * B[363][j])
                + (A[i][364] * B[364][j])
                + (A[i][365] * B[365][j])
                + (A[i][366] * B[366][j])
                + (A[i][367] * B[367][j])
                + (A[i][368] * B[368][j])
                + (A[i][369] * B[369][j])
                + (A[i][370] * B[370][j])
                + (A[i][371] * B[371][j])
                + (A[i][372] * B[372][j])
                + (A[i][373] * B[373][j])
                + (A[i][374] * B[374][j])
                + (A[i][375] * B[375][j])
                + (A[i][376] * B[376][j])
                + (A[i][377] * B[377][j])
                + (A[i][378] * B[378][j])
                + (A[i][379] * B[379][j])
                + (A[i][380] * B[380][j])
                + (A[i][381] * B[381][j])
                + (A[i][382] * B[382][j])
                + (A[i][383] * B[383][j])
                + (A[i][384] * B[384][j])
                + (A[i][385] * B[385][j])
                + (A[i][386] * B[386][j])
                + (A[i][387] * B[387][j])
                + (A[i][388] * B[388][j])
                + (A[i][389] * B[389][j])
                + (A[i][390] * B[390][j])
                + (A[i][391] * B[391][j])
                + (A[i][392] * B[392][j])
                + (A[i][393] * B[393][j])
                + (A[i][394] * B[394][j])
                + (A[i][395] * B[395][j])
                + (A[i][396] * B[396][j])
                + (A[i][397] * B[397][j])
                + (A[i][398] * B[398][j])
                + (A[i][399] * B[399][j])
                + (A[i][400] * B[400][j])
                + (A[i][401] * B[401][j])
                + (A[i][402] * B[402][j])
                + (A[i][403] * B[403][j])
                + (A[i][404] * B[404][j])
                + (A[i][405] * B[405][j])
                + (A[i][406] * B[406][j])
                + (A[i][407] * B[407][j])
                + (A[i][408] * B[408][j])
                + (A[i][409] * B[409][j])
                + (A[i][410] * B[410][j])
                + (A[i][411] * B[411][j])
                + (A[i][412] * B[412][j])
                + (A[i][413] * B[413][j])
                + (A[i][414] * B[414][j])
                + (A[i][415] * B[415][j])
                + (A[i][416] * B[416][j])
                + (A[i][417] * B[417][j])
                + (A[i][418] * B[418][j])
                + (A[i][419] * B[419][j])
                + (A[i][420] * B[420][j])
                + (A[i][421] * B[421][j])
                + (A[i][422] * B[422][j])
                + (A[i][423] * B[423][j])
                + (A[i][424] * B[424][j])
                + (A[i][425] * B[425][j])
                + (A[i][426] * B[426][j])
                + (A[i][427] * B[427][j])
                + (A[i][428] * B[428][j])
                + (A[i][429] * B[429][j])
                + (A[i][430] * B[430][j])
                + (A[i][431] * B[431][j])
                + (A[i][432] * B[432][j])
                + (A[i][433] * B[433][j])
                + (A[i][434] * B[434][j])
                + (A[i][435] * B[435][j])
                + (A[i][436] * B[436][j])
                + (A[i][437] * B[437][j])
                + (A[i][438] * B[438][j])
                + (A[i][439] * B[439][j])
                + (A[i][440] * B[440][j])
                + (A[i][441] * B[441][j])
                + (A[i][442] * B[442][j])
                + (A[i][443] * B[443][j])
                + (A[i][444] * B[444][j])
                + (A[i][445] * B[445][j])
                + (A[i][446] * B[446][j])
                + (A[i][447] * B[447][j])
                + (A[i][448] * B[448][j])
                + (A[i][449] * B[449][j])
                + (A[i][450] * B[450][j])
                + (A[i][451] * B[451][j])
                + (A[i][452] * B[452][j])
                + (A[i][453] * B[453][j])
                + (A[i][454] * B[454][j])
                + (A[i][455] * B[455][j])
                + (A[i][456] * B[456][j])
                + (A[i][457] * B[457][j])
                + (A[i][458] * B[458][j])
                + (A[i][459] * B[459][j])
                + (A[i][460] * B[460][j])
                + (A[i][461] * B[461][j])
                + (A[i][462] * B[462][j])
                + (A[i][463] * B[463][j])
                + (A[i][464] * B[464][j])
                + (A[i][465] * B[465][j])
                + (A[i][466] * B[466][j])
                + (A[i][467] * B[467][j])
                + (A[i][468] * B[468][j])
                + (A[i][469] * B[469][j])
                + (A[i][470] * B[470][j])
                + (A[i][471] * B[471][j])
                + (A[i][472] * B[472][j])
                + (A[i][473] * B[473][j])
                + (A[i][474] * B[474][j])
                + (A[i][475] * B[475][j])
                + (A[i][476] * B[476][j])
                + (A[i][477] * B[477][j])
                + (A[i][478] * B[478][j])
                + (A[i][479] * B[479][j])
                + (A[i][480] * B[480][j])
                + (A[i][481] * B[481][j])
                + (A[i][482] * B[482][j])
                + (A[i][483] * B[483][j])
                + (A[i][484] * B[484][j])
                + (A[i][485] * B[485][j])
                + (A[i][486] * B[486][j])
                + (A[i][487] * B[487][j])
                + (A[i][488] * B[488][j])
                + (A[i][489] * B[489][j])
                + (A[i][490] * B[490][j])
                + (A[i][491] * B[491][j])
                + (A[i][492] * B[492][j])
                + (A[i][493] * B[493][j])
                + (A[i][494] * B[494][j])
                + (A[i][495] * B[495][j])
                + (A[i][496] * B[496][j])
                + (A[i][497] * B[497][j])
                + (A[i][498] * B[498][j])
                + (A[i][499] * B[499][j])
                + (A[i][500] * B[500][j])
                + (A[i][501] * B[501][j])
                + (A[i][502] * B[502][j])
                + (A[i][503] * B[503][j])
                + (A[i][504] * B[504][j])
                + (A[i][505] * B[505][j])
                + (A[i][506] * B[506][j])
                + (A[i][507] * B[507][j])
                + (A[i][508] * B[508][j])
                + (A[i][509] * B[509][j])
                + (A[i][510] * B[510][j])
                + (A[i][511] * B[511][j]);
        }
    }
    C
}

fn matmul256(n: usize, A: &Vec<Vec<f32>>, B: &Vec<Vec<f32>>) -> Vec<Vec<f32>> {
    let mut C = vec![vec![0.0; n]; n];
    for i in 0..n {
        for j in 0..n {
            C[i][j] = (A[i][0] * B[0][j])
                + (A[i][1] * B[1][j])
                + (A[i][2] * B[2][j])
                + (A[i][3] * B[3][j])
                + (A[i][4] * B[4][j])
                + (A[i][5] * B[5][j])
                + (A[i][6] * B[6][j])
                + (A[i][7] * B[7][j])
                + (A[i][8] * B[8][j])
                + (A[i][9] * B[9][j])
                + (A[i][10] * B[10][j])
                + (A[i][11] * B[11][j])
                + (A[i][12] * B[12][j])
                + (A[i][13] * B[13][j])
                + (A[i][14] * B[14][j])
                + (A[i][15] * B[15][j])
                + (A[i][16] * B[16][j])
                + (A[i][17] * B[17][j])
                + (A[i][18] * B[18][j])
                + (A[i][19] * B[19][j])
                + (A[i][20] * B[20][j])
                + (A[i][21] * B[21][j])
                + (A[i][22] * B[22][j])
                + (A[i][23] * B[23][j])
                + (A[i][24] * B[24][j])
                + (A[i][25] * B[25][j])
                + (A[i][26] * B[26][j])
                + (A[i][27] * B[27][j])
                + (A[i][28] * B[28][j])
                + (A[i][29] * B[29][j])
                + (A[i][30] * B[30][j])
                + (A[i][31] * B[31][j])
                + (A[i][32] * B[32][j])
                + (A[i][33] * B[33][j])
                + (A[i][34] * B[34][j])
                + (A[i][35] * B[35][j])
                + (A[i][36] * B[36][j])
                + (A[i][37] * B[37][j])
                + (A[i][38] * B[38][j])
                + (A[i][39] * B[39][j])
                + (A[i][40] * B[40][j])
                + (A[i][41] * B[41][j])
                + (A[i][42] * B[42][j])
                + (A[i][43] * B[43][j])
                + (A[i][44] * B[44][j])
                + (A[i][45] * B[45][j])
                + (A[i][46] * B[46][j])
                + (A[i][47] * B[47][j])
                + (A[i][48] * B[48][j])
                + (A[i][49] * B[49][j])
                + (A[i][50] * B[50][j])
                + (A[i][51] * B[51][j])
                + (A[i][52] * B[52][j])
                + (A[i][53] * B[53][j])
                + (A[i][54] * B[54][j])
                + (A[i][55] * B[55][j])
                + (A[i][56] * B[56][j])
                + (A[i][57] * B[57][j])
                + (A[i][58] * B[58][j])
                + (A[i][59] * B[59][j])
                + (A[i][60] * B[60][j])
                + (A[i][61] * B[61][j])
                + (A[i][62] * B[62][j])
                + (A[i][63] * B[63][j])
                + (A[i][64] * B[64][j])
                + (A[i][65] * B[65][j])
                + (A[i][66] * B[66][j])
                + (A[i][67] * B[67][j])
                + (A[i][68] * B[68][j])
                + (A[i][69] * B[69][j])
                + (A[i][70] * B[70][j])
                + (A[i][71] * B[71][j])
                + (A[i][72] * B[72][j])
                + (A[i][73] * B[73][j])
                + (A[i][74] * B[74][j])
                + (A[i][75] * B[75][j])
                + (A[i][76] * B[76][j])
                + (A[i][77] * B[77][j])
                + (A[i][78] * B[78][j])
                + (A[i][79] * B[79][j])
                + (A[i][80] * B[80][j])
                + (A[i][81] * B[81][j])
                + (A[i][82] * B[82][j])
                + (A[i][83] * B[83][j])
                + (A[i][84] * B[84][j])
                + (A[i][85] * B[85][j])
                + (A[i][86] * B[86][j])
                + (A[i][87] * B[87][j])
                + (A[i][88] * B[88][j])
                + (A[i][89] * B[89][j])
                + (A[i][90] * B[90][j])
                + (A[i][91] * B[91][j])
                + (A[i][92] * B[92][j])
                + (A[i][93] * B[93][j])
                + (A[i][94] * B[94][j])
                + (A[i][95] * B[95][j])
                + (A[i][96] * B[96][j])
                + (A[i][97] * B[97][j])
                + (A[i][98] * B[98][j])
                + (A[i][99] * B[99][j])
                + (A[i][100] * B[100][j])
                + (A[i][101] * B[101][j])
                + (A[i][102] * B[102][j])
                + (A[i][103] * B[103][j])
                + (A[i][104] * B[104][j])
                + (A[i][105] * B[105][j])
                + (A[i][106] * B[106][j])
                + (A[i][107] * B[107][j])
                + (A[i][108] * B[108][j])
                + (A[i][109] * B[109][j])
                + (A[i][110] * B[110][j])
                + (A[i][111] * B[111][j])
                + (A[i][112] * B[112][j])
                + (A[i][113] * B[113][j])
                + (A[i][114] * B[114][j])
                + (A[i][115] * B[115][j])
                + (A[i][116] * B[116][j])
                + (A[i][117] * B[117][j])
                + (A[i][118] * B[118][j])
                + (A[i][119] * B[119][j])
                + (A[i][120] * B[120][j])
                + (A[i][121] * B[121][j])
                + (A[i][122] * B[122][j])
                + (A[i][123] * B[123][j])
                + (A[i][124] * B[124][j])
                + (A[i][125] * B[125][j])
                + (A[i][126] * B[126][j])
                + (A[i][127] * B[127][j])
                + (A[i][128] * B[128][j])
                + (A[i][129] * B[129][j])
                + (A[i][130] * B[130][j])
                + (A[i][131] * B[131][j])
                + (A[i][132] * B[132][j])
                + (A[i][133] * B[133][j])
                + (A[i][134] * B[134][j])
                + (A[i][135] * B[135][j])
                + (A[i][136] * B[136][j])
                + (A[i][137] * B[137][j])
                + (A[i][138] * B[138][j])
                + (A[i][139] * B[139][j])
                + (A[i][140] * B[140][j])
                + (A[i][141] * B[141][j])
                + (A[i][142] * B[142][j])
                + (A[i][143] * B[143][j])
                + (A[i][144] * B[144][j])
                + (A[i][145] * B[145][j])
                + (A[i][146] * B[146][j])
                + (A[i][147] * B[147][j])
                + (A[i][148] * B[148][j])
                + (A[i][149] * B[149][j])
                + (A[i][150] * B[150][j])
                + (A[i][151] * B[151][j])
                + (A[i][152] * B[152][j])
                + (A[i][153] * B[153][j])
                + (A[i][154] * B[154][j])
                + (A[i][155] * B[155][j])
                + (A[i][156] * B[156][j])
                + (A[i][157] * B[157][j])
                + (A[i][158] * B[158][j])
                + (A[i][159] * B[159][j])
                + (A[i][160] * B[160][j])
                + (A[i][161] * B[161][j])
                + (A[i][162] * B[162][j])
                + (A[i][163] * B[163][j])
                + (A[i][164] * B[164][j])
                + (A[i][165] * B[165][j])
                + (A[i][166] * B[166][j])
                + (A[i][167] * B[167][j])
                + (A[i][168] * B[168][j])
                + (A[i][169] * B[169][j])
                + (A[i][170] * B[170][j])
                + (A[i][171] * B[171][j])
                + (A[i][172] * B[172][j])
                + (A[i][173] * B[173][j])
                + (A[i][174] * B[174][j])
                + (A[i][175] * B[175][j])
                + (A[i][176] * B[176][j])
                + (A[i][177] * B[177][j])
                + (A[i][178] * B[178][j])
                + (A[i][179] * B[179][j])
                + (A[i][180] * B[180][j])
                + (A[i][181] * B[181][j])
                + (A[i][182] * B[182][j])
                + (A[i][183] * B[183][j])
                + (A[i][184] * B[184][j])
                + (A[i][185] * B[185][j])
                + (A[i][186] * B[186][j])
                + (A[i][187] * B[187][j])
                + (A[i][188] * B[188][j])
                + (A[i][189] * B[189][j])
                + (A[i][190] * B[190][j])
                + (A[i][191] * B[191][j])
                + (A[i][192] * B[192][j])
                + (A[i][193] * B[193][j])
                + (A[i][194] * B[194][j])
                + (A[i][195] * B[195][j])
                + (A[i][196] * B[196][j])
                + (A[i][197] * B[197][j])
                + (A[i][198] * B[198][j])
                + (A[i][199] * B[199][j])
                + (A[i][200] * B[200][j])
                + (A[i][201] * B[201][j])
                + (A[i][202] * B[202][j])
                + (A[i][203] * B[203][j])
                + (A[i][204] * B[204][j])
                + (A[i][205] * B[205][j])
                + (A[i][206] * B[206][j])
                + (A[i][207] * B[207][j])
                + (A[i][208] * B[208][j])
                + (A[i][209] * B[209][j])
                + (A[i][210] * B[210][j])
                + (A[i][211] * B[211][j])
                + (A[i][212] * B[212][j])
                + (A[i][213] * B[213][j])
                + (A[i][214] * B[214][j])
                + (A[i][215] * B[215][j])
                + (A[i][216] * B[216][j])
                + (A[i][217] * B[217][j])
                + (A[i][218] * B[218][j])
                + (A[i][219] * B[219][j])
                + (A[i][220] * B[220][j])
                + (A[i][221] * B[221][j])
                + (A[i][222] * B[222][j])
                + (A[i][223] * B[223][j])
                + (A[i][224] * B[224][j])
                + (A[i][225] * B[225][j])
                + (A[i][226] * B[226][j])
                + (A[i][227] * B[227][j])
                + (A[i][228] * B[228][j])
                + (A[i][229] * B[229][j])
                + (A[i][230] * B[230][j])
                + (A[i][231] * B[231][j])
                + (A[i][232] * B[232][j])
                + (A[i][233] * B[233][j])
                + (A[i][234] * B[234][j])
                + (A[i][235] * B[235][j])
                + (A[i][236] * B[236][j])
                + (A[i][237] * B[237][j])
                + (A[i][238] * B[238][j])
                + (A[i][239] * B[239][j])
                + (A[i][240] * B[240][j])
                + (A[i][241] * B[241][j])
                + (A[i][242] * B[242][j])
                + (A[i][243] * B[243][j])
                + (A[i][244] * B[244][j])
                + (A[i][245] * B[245][j])
                + (A[i][246] * B[246][j])
                + (A[i][247] * B[247][j])
                + (A[i][248] * B[248][j])
                + (A[i][249] * B[249][j])
                + (A[i][250] * B[250][j])
                + (A[i][251] * B[251][j])
                + (A[i][252] * B[252][j])
                + (A[i][253] * B[253][j])
                + (A[i][254] * B[254][j])
                + (A[i][255] * B[255][j])
        }
    }
    C
}

fn matmul128(n: usize, A: &Vec<Vec<f32>>, B: &Vec<Vec<f32>>) -> Vec<Vec<f32>> {
    let mut C = vec![vec![0.0; n]; n];
    for i in 0..n {
        for j in 0..n {
            C[i][j] = (A[i][0] * B[0][j])
                + (A[i][1] * B[1][j])
                + (A[i][2] * B[2][j])
                + (A[i][3] * B[3][j])
                + (A[i][4] * B[4][j])
                + (A[i][5] * B[5][j])
                + (A[i][6] * B[6][j])
                + (A[i][7] * B[7][j])
                + (A[i][8] * B[8][j])
                + (A[i][9] * B[9][j])
                + (A[i][10] * B[10][j])
                + (A[i][11] * B[11][j])
                + (A[i][12] * B[12][j])
                + (A[i][13] * B[13][j])
                + (A[i][14] * B[14][j])
                + (A[i][15] * B[15][j])
                + (A[i][16] * B[16][j])
                + (A[i][17] * B[17][j])
                + (A[i][18] * B[18][j])
                + (A[i][19] * B[19][j])
                + (A[i][20] * B[20][j])
                + (A[i][21] * B[21][j])
                + (A[i][22] * B[22][j])
                + (A[i][23] * B[23][j])
                + (A[i][24] * B[24][j])
                + (A[i][25] * B[25][j])
                + (A[i][26] * B[26][j])
                + (A[i][27] * B[27][j])
                + (A[i][28] * B[28][j])
                + (A[i][29] * B[29][j])
                + (A[i][30] * B[30][j])
                + (A[i][31] * B[31][j])
                + (A[i][32] * B[32][j])
                + (A[i][33] * B[33][j])
                + (A[i][34] * B[34][j])
                + (A[i][35] * B[35][j])
                + (A[i][36] * B[36][j])
                + (A[i][37] * B[37][j])
                + (A[i][38] * B[38][j])
                + (A[i][39] * B[39][j])
                + (A[i][40] * B[40][j])
                + (A[i][41] * B[41][j])
                + (A[i][42] * B[42][j])
                + (A[i][43] * B[43][j])
                + (A[i][44] * B[44][j])
                + (A[i][45] * B[45][j])
                + (A[i][46] * B[46][j])
                + (A[i][47] * B[47][j])
                + (A[i][48] * B[48][j])
                + (A[i][49] * B[49][j])
                + (A[i][50] * B[50][j])
                + (A[i][51] * B[51][j])
                + (A[i][52] * B[52][j])
                + (A[i][53] * B[53][j])
                + (A[i][54] * B[54][j])
                + (A[i][55] * B[55][j])
                + (A[i][56] * B[56][j])
                + (A[i][57] * B[57][j])
                + (A[i][58] * B[58][j])
                + (A[i][59] * B[59][j])
                + (A[i][60] * B[60][j])
                + (A[i][61] * B[61][j])
                + (A[i][62] * B[62][j])
                + (A[i][63] * B[63][j])
                + (A[i][64] * B[64][j])
                + (A[i][65] * B[65][j])
                + (A[i][66] * B[66][j])
                + (A[i][67] * B[67][j])
                + (A[i][68] * B[68][j])
                + (A[i][69] * B[69][j])
                + (A[i][70] * B[70][j])
                + (A[i][71] * B[71][j])
                + (A[i][72] * B[72][j])
                + (A[i][73] * B[73][j])
                + (A[i][74] * B[74][j])
                + (A[i][75] * B[75][j])
                + (A[i][76] * B[76][j])
                + (A[i][77] * B[77][j])
                + (A[i][78] * B[78][j])
                + (A[i][79] * B[79][j])
                + (A[i][80] * B[80][j])
                + (A[i][81] * B[81][j])
                + (A[i][82] * B[82][j])
                + (A[i][83] * B[83][j])
                + (A[i][84] * B[84][j])
                + (A[i][85] * B[85][j])
                + (A[i][86] * B[86][j])
                + (A[i][87] * B[87][j])
                + (A[i][88] * B[88][j])
                + (A[i][89] * B[89][j])
                + (A[i][90] * B[90][j])
                + (A[i][91] * B[91][j])
                + (A[i][92] * B[92][j])
                + (A[i][93] * B[93][j])
                + (A[i][94] * B[94][j])
                + (A[i][95] * B[95][j])
                + (A[i][96] * B[96][j])
                + (A[i][97] * B[97][j])
                + (A[i][98] * B[98][j])
                + (A[i][99] * B[99][j])
                + (A[i][100] * B[100][j])
                + (A[i][101] * B[101][j])
                + (A[i][102] * B[102][j])
                + (A[i][103] * B[103][j])
                + (A[i][104] * B[104][j])
                + (A[i][105] * B[105][j])
                + (A[i][106] * B[106][j])
                + (A[i][107] * B[107][j])
                + (A[i][108] * B[108][j])
                + (A[i][109] * B[109][j])
                + (A[i][110] * B[110][j])
                + (A[i][111] * B[111][j])
                + (A[i][112] * B[112][j])
                + (A[i][113] * B[113][j])
                + (A[i][114] * B[114][j])
                + (A[i][115] * B[115][j])
                + (A[i][116] * B[116][j])
                + (A[i][117] * B[117][j])
                + (A[i][118] * B[118][j])
                + (A[i][119] * B[119][j])
                + (A[i][120] * B[120][j])
                + (A[i][121] * B[121][j])
                + (A[i][122] * B[122][j])
                + (A[i][123] * B[123][j])
                + (A[i][124] * B[124][j])
                + (A[i][125] * B[125][j])
                + (A[i][126] * B[126][j])
                + (A[i][127] * B[127][j])
        }
    }
    C
}

fn matmul64(n: usize, A: &Vec<Vec<f32>>, B: &Vec<Vec<f32>>) -> Vec<Vec<f32>> {
    let mut C = vec![vec![0.0; n]; n];
    for i in 0..n {
        for j in 0..n {
            C[i][j] = (A[i][0] * B[0][j])
                + (A[i][1] * B[1][j])
                + (A[i][2] * B[2][j])
                + (A[i][3] * B[3][j])
                + (A[i][4] * B[4][j])
                + (A[i][5] * B[5][j])
                + (A[i][6] * B[6][j])
                + (A[i][7] * B[7][j])
                + (A[i][8] * B[8][j])
                + (A[i][9] * B[9][j])
                + (A[i][10] * B[10][j])
                + (A[i][11] * B[11][j])
                + (A[i][12] * B[12][j])
                + (A[i][13] * B[13][j])
                + (A[i][14] * B[14][j])
                + (A[i][15] * B[15][j])
                + (A[i][16] * B[16][j])
                + (A[i][17] * B[17][j])
                + (A[i][18] * B[18][j])
                + (A[i][19] * B[19][j])
                + (A[i][20] * B[20][j])
                + (A[i][21] * B[21][j])
                + (A[i][22] * B[22][j])
                + (A[i][23] * B[23][j])
                + (A[i][24] * B[24][j])
                + (A[i][25] * B[25][j])
                + (A[i][26] * B[26][j])
                + (A[i][27] * B[27][j])
                + (A[i][28] * B[28][j])
                + (A[i][29] * B[29][j])
                + (A[i][30] * B[30][j])
                + (A[i][31] * B[31][j])
                + (A[i][32] * B[32][j])
                + (A[i][33] * B[33][j])
                + (A[i][34] * B[34][j])
                + (A[i][35] * B[35][j])
                + (A[i][36] * B[36][j])
                + (A[i][37] * B[37][j])
                + (A[i][38] * B[38][j])
                + (A[i][39] * B[39][j])
                + (A[i][40] * B[40][j])
                + (A[i][41] * B[41][j])
                + (A[i][42] * B[42][j])
                + (A[i][43] * B[43][j])
                + (A[i][44] * B[44][j])
                + (A[i][45] * B[45][j])
                + (A[i][46] * B[46][j])
                + (A[i][47] * B[47][j])
                + (A[i][48] * B[48][j])
                + (A[i][49] * B[49][j])
                + (A[i][50] * B[50][j])
                + (A[i][51] * B[51][j])
                + (A[i][52] * B[52][j])
                + (A[i][53] * B[53][j])
                + (A[i][54] * B[54][j])
                + (A[i][55] * B[55][j])
                + (A[i][56] * B[56][j])
                + (A[i][57] * B[57][j])
                + (A[i][58] * B[58][j])
                + (A[i][59] * B[59][j])
                + (A[i][60] * B[60][j])
                + (A[i][61] * B[61][j])
                + (A[i][62] * B[62][j])
                + (A[i][63] * B[63][j])
        }
    }
    C
}

fn matmul32(n: usize, A: &Vec<Vec<f32>>, B: &Vec<Vec<f32>>) -> Vec<Vec<f32>> {
    let mut C = vec![vec![0.0; n]; n];
    for i in 0..n {
        for j in 0..n {
            C[i][j] = (A[i][0] * B[0][j])
                + (A[i][1] * B[1][j])
                + (A[i][2] * B[2][j])
                + (A[i][3] * B[3][j])
                + (A[i][4] * B[4][j])
                + (A[i][5] * B[5][j])
                + (A[i][6] * B[6][j])
                + (A[i][7] * B[7][j])
                + (A[i][8] * B[8][j])
                + (A[i][9] * B[9][j])
                + (A[i][10] * B[10][j])
                + (A[i][11] * B[11][j])
                + (A[i][12] * B[12][j])
                + (A[i][13] * B[13][j])
                + (A[i][14] * B[14][j])
                + (A[i][15] * B[15][j])
                + (A[i][16] * B[16][j])
                + (A[i][17] * B[17][j])
                + (A[i][18] * B[18][j])
                + (A[i][19] * B[19][j])
                + (A[i][20] * B[20][j])
                + (A[i][21] * B[21][j])
                + (A[i][22] * B[22][j])
                + (A[i][23] * B[23][j])
                + (A[i][24] * B[24][j])
                + (A[i][25] * B[25][j])
                + (A[i][26] * B[26][j])
                + (A[i][27] * B[27][j])
                + (A[i][28] * B[28][j])
                + (A[i][29] * B[29][j])
                + (A[i][30] * B[30][j])
                + (A[i][31] * B[31][j])
        }
    }
    C
}

fn matmul16(n: usize, A: &Vec<Vec<f32>>, B: &Vec<Vec<f32>>) -> Vec<Vec<f32>> {
    let mut C = vec![vec![0.0; n]; n];
    for i in 0..n {
        for j in 0..n {
            C[i][j] = (A[i][0] * B[0][j])
                + (A[i][1] * B[1][j])
                + (A[i][2] * B[2][j])
                + (A[i][3] * B[3][j])
                + (A[i][4] * B[4][j])
                + (A[i][5] * B[5][j])
                + (A[i][6] * B[6][j])
                + (A[i][7] * B[7][j])
                + (A[i][8] * B[8][j])
                + (A[i][9] * B[9][j])
                + (A[i][10] * B[10][j])
                + (A[i][11] * B[11][j])
                + (A[i][12] * B[12][j])
                + (A[i][13] * B[13][j])
                + (A[i][14] * B[14][j])
                + (A[i][15] * B[15][j])
        }
    }
    C
}

fn matmul8(n: usize, A: &Vec<Vec<f32>>, B: &Vec<Vec<f32>>) -> Vec<Vec<f32>> {
    let mut C = vec![vec![0.0; n]; n];
    for i in 0..n {
        for j in 0..n {
            C[i][j] = (A[i][0] * B[0][j])
                + (A[i][1] * B[1][j])
                + (A[i][2] * B[2][j])
                + (A[i][3] * B[3][j])
                + (A[i][4] * B[4][j])
                + (A[i][5] * B[5][j])
                + (A[i][6] * B[6][j])
                + (A[i][7] * B[7][j])
        }
    }
    C
}

#[cfg(test)]
mod tests {
    use super::*;
    #[test]
    fn test_name() {
        let A = generate(512, 512);
        let B = generate(512, 512);

        let result = long_mult(&A, &B);
        println!("DONE STRASSENS");
        assert_eq!(result.len(), 512,);
        assert_eq!(result[0].len(), 512,);
        let mut C = vec![vec![0.0; 512]; 512];
        for i in 0..512 {
            for j in 0..512 {
                for k in 0..512 {
                    C[i][j] += A[i][k] * B[k][j];
                }
            }
        }
        assert_eq!(result.len(), 512,);
        assert_eq!(result[0].len(), 512,);
        assert_eq!(result, C)
    }

    fn generate(x: usize, y: usize) -> Vec<Vec<f32>> {
        let mut result = Vec::with_capacity(x);
        for _ in 0..x {
            let mut row = Vec::with_capacity(y);
            for _ in 0..y {
                row.push(1.0);
            }
            result.push(row);
        }
        result
    }
}
